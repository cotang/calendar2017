/*
SCSS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: $icon-home-width;
}

The large array-like variables contain all information about a single icon
$icon-home: x y offset_x offset_y width height total_width total_height image_path;

At the bottom of this section, we provide information about the spritesheet itself
$spritesheet: width height image $spritesheet-sprites;
*/
$s-arrows-name: 's-arrows';
$s-arrows-x: 86px;
$s-arrows-y: 24px;
$s-arrows-offset-x: -86px;
$s-arrows-offset-y: -24px;
$s-arrows-width: 25px;
$s-arrows-height: 26px;
$s-arrows-total-width: 198px;
$s-arrows-total-height: 119px;
$s-arrows-image: '../img/png-sprite.png';
$s-arrows: (86px, 24px, -86px, -24px, 25px, 26px, 198px, 119px, '../img/png-sprite.png', 's-arrows', );
$s-link-email-name: 's-link-email';
$s-link-email-x: 0px;
$s-link-email-y: 55px;
$s-link-email-offset-x: 0px;
$s-link-email-offset-y: -55px;
$s-link-email-width: 23px;
$s-link-email-height: 17px;
$s-link-email-total-width: 198px;
$s-link-email-total-height: 119px;
$s-link-email-image: '../img/png-sprite.png';
$s-link-email: (0px, 55px, 0px, -55px, 23px, 17px, 198px, 119px, '../img/png-sprite.png', 's-link-email', );
$s-link-fb-name: 's-link-fb';
$s-link-fb-x: 0px;
$s-link-fb-y: 95px;
$s-link-fb-offset-x: 0px;
$s-link-fb-offset-y: -95px;
$s-link-fb-width: 12px;
$s-link-fb-height: 24px;
$s-link-fb-total-width: 198px;
$s-link-fb-total-height: 119px;
$s-link-fb-image: '../img/png-sprite.png';
$s-link-fb: (0px, 95px, 0px, -95px, 12px, 24px, 198px, 119px, '../img/png-sprite.png', 's-link-fb', );
$s-link-tel-name: 's-link-tel';
$s-link-tel-x: 0px;
$s-link-tel-y: 74px;
$s-link-tel-offset-x: 0px;
$s-link-tel-offset-y: -74px;
$s-link-tel-width: 19px;
$s-link-tel-height: 19px;
$s-link-tel-total-width: 198px;
$s-link-tel-total-height: 119px;
$s-link-tel-image: '../img/png-sprite.png';
$s-link-tel: (0px, 74px, 0px, -74px, 19px, 19px, 198px, 119px, '../img/png-sprite.png', 's-link-tel', );
$s-link-vk-name: 's-link-vk';
$s-link-vk-x: 167px;
$s-link-vk-y: 24px;
$s-link-vk-offset-x: -167px;
$s-link-vk-offset-y: -24px;
$s-link-vk-width: 26px;
$s-link-vk-height: 15px;
$s-link-vk-total-width: 198px;
$s-link-vk-total-height: 119px;
$s-link-vk-image: '../img/png-sprite.png';
$s-link-vk: (167px, 24px, -167px, -24px, 26px, 15px, 198px, 119px, '../img/png-sprite.png', 's-link-vk', );
$s-properties-car-name: 's-properties-car';
$s-properties-car-x: 55px;
$s-properties-car-y: 24px;
$s-properties-car-offset-x: -55px;
$s-properties-car-offset-y: -24px;
$s-properties-car-width: 29px;
$s-properties-car-height: 26px;
$s-properties-car-total-width: 198px;
$s-properties-car-total-height: 119px;
$s-properties-car-image: '../img/png-sprite.png';
$s-properties-car: (55px, 24px, -55px, -24px, 29px, 26px, 198px, 119px, '../img/png-sprite.png', 's-properties-car', );
$s-properties-like-name: 's-properties-like';
$s-properties-like-x: 113px;
$s-properties-like-y: 24px;
$s-properties-like-offset-x: -113px;
$s-properties-like-offset-y: -24px;
$s-properties-like-width: 23px;
$s-properties-like-height: 22px;
$s-properties-like-total-width: 198px;
$s-properties-like-total-height: 119px;
$s-properties-like-image: '../img/png-sprite.png';
$s-properties-like: (113px, 24px, -113px, -24px, 23px, 22px, 198px, 119px, '../img/png-sprite.png', 's-properties-like', );
$s-properties-pay-name: 's-properties-pay';
$s-properties-pay-x: 138px;
$s-properties-pay-y: 24px;
$s-properties-pay-offset-x: -138px;
$s-properties-pay-offset-y: -24px;
$s-properties-pay-width: 27px;
$s-properties-pay-height: 16px;
$s-properties-pay-total-width: 198px;
$s-properties-pay-total-height: 119px;
$s-properties-pay-image: '../img/png-sprite.png';
$s-properties-pay: (138px, 24px, -138px, -24px, 27px, 16px, 198px, 119px, '../img/png-sprite.png', 's-properties-pay', );
$s-smile-name: 's-smile';
$s-smile-x: 0px;
$s-smile-y: 0px;
$s-smile-offset-x: 0px;
$s-smile-offset-y: 0px;
$s-smile-width: 53px;
$s-smile-height: 53px;
$s-smile-total-width: 198px;
$s-smile-total-height: 119px;
$s-smile-image: '../img/png-sprite.png';
$s-smile: (0px, 0px, 0px, 0px, 53px, 53px, 198px, 119px, '../img/png-sprite.png', 's-smile', );
$s-snake-blue-name: 's-snake-blue';
$s-snake-blue-x: 55px;
$s-snake-blue-y: 12px;
$s-snake-blue-offset-x: -55px;
$s-snake-blue-offset-y: -12px;
$s-snake-blue-width: 143px;
$s-snake-blue-height: 10px;
$s-snake-blue-total-width: 198px;
$s-snake-blue-total-height: 119px;
$s-snake-blue-image: '../img/png-sprite.png';
$s-snake-blue: (55px, 12px, -55px, -12px, 143px, 10px, 198px, 119px, '../img/png-sprite.png', 's-snake-blue', );
$s-snake-orange-name: 's-snake-orange';
$s-snake-orange-x: 55px;
$s-snake-orange-y: 0px;
$s-snake-orange-offset-x: -55px;
$s-snake-orange-offset-y: 0px;
$s-snake-orange-width: 143px;
$s-snake-orange-height: 10px;
$s-snake-orange-total-width: 198px;
$s-snake-orange-total-height: 119px;
$s-snake-orange-image: '../img/png-sprite.png';
$s-snake-orange: (55px, 0px, -55px, 0px, 143px, 10px, 198px, 119px, '../img/png-sprite.png', 's-snake-orange', );
$spritesheet-width: 198px;
$spritesheet-height: 119px;
$spritesheet-image: '../img/png-sprite.png';
$spritesheet-sprites: ($s-arrows, $s-link-email, $s-link-fb, $s-link-tel, $s-link-vk, $s-properties-car, $s-properties-like, $s-properties-pay, $s-smile, $s-snake-blue, $s-snake-orange, );
$spritesheet: (198px, 119px, '../img/png-sprite.png', $spritesheet-sprites, );

/*
The provided mixins are intended to be used with the array-like variables

.icon-home {
  @include sprite-width($icon-home);
}

.icon-email {
  @include sprite($icon-email);
}

Example usage in HTML:

`display: block` sprite:
<div class="icon-home"></div>

To change `display` (e.g. `display: inline-block;`), we suggest using a common CSS class:

// CSS
.icon {
  display: inline-block;
}

// HTML
<i class="icon icon-home"></i>
*/
@mixin sprite-width($sprite) {
  width: nth($sprite, 5);
}

@mixin sprite-height($sprite) {
  height: nth($sprite, 6);
}

@mixin sprite-position($sprite) {
  $sprite-offset-x: nth($sprite, 3);
  $sprite-offset-y: nth($sprite, 4);
  background-position: $sprite-offset-x  $sprite-offset-y;
}

@mixin sprite-image($sprite) {
  $sprite-image: nth($sprite, 9);
  background-image: url(#{$sprite-image});
}

@mixin sprite($sprite) {
  @include sprite-image($sprite);
  @include sprite-position($sprite);
  @include sprite-width($sprite);
  @include sprite-height($sprite);
}

/*
The `sprites` mixin generates identical output to the CSS template
  but can be overridden inside of SCSS

@include sprites($spritesheet-sprites);
*/
@mixin sprites($sprites) {
  @each $sprite in $sprites {
    $sprite-name: nth($sprite, 10);
    .#{$sprite-name} {
      @include sprite($sprite);
    }
  }
}
